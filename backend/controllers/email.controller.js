const nodemailer = require('nodemailer');
const config = require('../config/email.config');

// Kh·ªüi t·∫°o transporter
const transporter = nodemailer.createTransport(config.email);

// Controller x·ª≠ l√Ω email
const emailController = {
    // G·ª≠i email
    sendEmail: async (req, res) => {
        try {
            const { name, email, subject, message } = req.body;

            // C·∫•u h√¨nh email g·ª≠i ƒë·∫øn b·∫°n
            const mailOptions = {
                from: email,
                to: process.env.EMAIL_USER,
                subject: `[Portfolio Contact] ${subject}`,
                html: `
                    <div style="font-family: 'Arial', sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; color: #333;">
                        <div style="background: linear-gradient(135deg, #64ffda 0%, #00b8d4 100%); padding: 2px;">
                            <div style="background: #ffffff; padding: 20px;">
                                <h2 style="color: #0a192f; margin-bottom: 20px; text-align: center;">üéâ Th√¥ng Tin Li√™n H·ªá M·ªõi</h2>
                                
                                <div style="background: #f8f9fa; padding: 15px; border-radius: 5px; margin-bottom: 20px;">
                                    <p style="margin: 10px 0;"><strong style="color: #0a192f;">H·ªç t√™n:</strong> ${name}</p>
                                    <p style="margin: 10px 0;"><strong style="color: #0a192f;">Email:</strong> ${email}</p>
                                    <p style="margin: 10px 0;"><strong style="color: #0a192f;">Ti√™u ƒë·ªÅ:</strong> ${subject}</p>
                                </div>

                                <div style="background: #f8f9fa; padding: 15px; border-radius: 5px;">
                                    <p style="margin: 0 0 10px 0;"><strong style="color: #0a192f;">N·ªôi dung:</strong></p>
                                    <p style="margin: 0; line-height: 1.6;">${message}</p>
                                </div>
                            </div>
                        </div>
                    </div>
                `
            };

            // G·ª≠i email ƒë·∫øn b·∫°n
            await transporter.sendMail(mailOptions);

            // G·ª≠i email ph·∫£n h·ªìi t·ª± ƒë·ªông
            const autoReplyOptions = {
                from: process.env.EMAIL_USER,
                to: email,
                subject: 'üåü C·∫£m ∆°n b·∫°n ƒë√£ quan t√¢m ƒë·∫øn h·ªì s∆° c·ªßa t√¥i',
                html: `
                    <div style="font-family: 'Arial', sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; color: #333;">
                        <div style="background: linear-gradient(135deg, #64ffda 0%, #00b8d4 100%); padding: 2px;">
                            <div style="background: #ffffff; padding: 20px;">
                                <div style="text-align: center; margin-bottom: 30px;">
                                    <h2 style="color: #0a192f; margin: 0;">K√≠nh g·ª≠i ${name},</h2>
                                </div>

                                <div style="line-height: 1.8; margin-bottom: 25px;">
                                    <p>T√¥i xin ch√¢n th√†nh c·∫£m ∆°n s·ª± quan t√¢m c·ªßa Qu√Ω c√¥ng ty ƒë·ªëi v·ªõi h·ªì s∆° ·ª©ng tuy·ªÉn c·ªßa t√¥i. ƒê√¢y th·ª±c s·ª± l√† m·ªôt c∆° h·ªôi qu√Ω b√°u ƒë·ªëi v·ªõi t√¥i.</p>
                                    
                                    <p>T√¥i r·∫•t vinh d·ª± khi nh·∫≠n ƒë∆∞·ª£c s·ª± quan t√¢m t·ª´ ph√≠a Qu√Ω c√¥ng ty v√† mong mu·ªën c√≥ c∆° h·ªôi ƒë∆∞·ª£c trao ƒë·ªïi chi ti·∫øt h∆°n v·ªÅ nh·ªØng ƒë√≥ng g√≥p m√† t√¥i c√≥ th·ªÉ mang l·∫°i.</p>

                                    <p>T√¥i s·∫Ω ph·∫£n h·ªìi chi ti·∫øt trong th·ªùi gian t·ª´ 2-4 gi·ªù t·ªõi ƒë·ªÉ kh√¥ng l√†m gi√°n ƒëo·∫°n qu√° tr√¨nh tuy·ªÉn d·ª•ng c·ªßa Qu√Ω c√¥ng ty.</p>
                                </div>

                                <div style="background: #f8f9fa; padding: 15px; border-radius: 5px; margin-bottom: 25px;">
                                    <h3 style="color: #0a192f; margin: 0 0 15px 0;">Trong th·ªùi gian ch·ªù ƒë·ª£i, m·ªùi Qu√Ω c√¥ng ty tham kh·∫£o th√™m:</h3>
                                    <ul style="margin: 0; padding-left: 20px;">
                                        <li style="margin-bottom: 10px;">Portfolio v√† c√°c d·ª± √°n c·ªßa t√¥i tr√™n <a href="https://github.com/WiniFyCode" style="color: #00b8d4; text-decoration: none;">GitHub</a></li>
                                        <li style="margin-bottom: 10px;">Th√¥ng tin chuy√™n m√¥n tr√™n <a href="https://www.linkedin.com/in/tranthanh23102005/" style="color: #00b8d4; text-decoration: none;">LinkedIn</a></li>
                                        <li style="margin-bottom: 10px;">Ho·∫°t ƒë·ªông c√° nh√¢n tr√™n <a href="https://www.facebook.com/tt230510/" style="color: #00b8d4; text-decoration: none;">Facebook</a></li>
                                    </ul>
                                </div>

                                <div style="text-align: center; margin-top: 30px;">
                                    <p style="color: #666; font-size: 14px;">Tr√¢n tr·ªçng,</p>
                                    <p style="color: #0a192f; font-weight: bold; margin: 5px 0;">Tr·∫ßn ƒê√¨nh Th√†nh</p>
                                    <p style="color: #666; font-size: 14px;">Full Stack Developer</p>
                                </div>

                                <div style="margin-top: 30px; padding-top: 20px; border-top: 1px solid #eee; text-align: center; font-style: italic;">
                                    <p style="color: #666; font-size: 12px;">ƒê√¢y l√† email t·ª± ƒë·ªông, nh∆∞ng t√¥i s·∫Ω ph·∫£n h·ªìi c√° nh√¢n trong th·ªùi gian s·ªõm nh·∫•t.</p>
                                </div>
                            </div>
                        </div>
                    </div>
                `
            };

            await transporter.sendMail(autoReplyOptions);

            res.status(200).json({ 
                success: true, 
                message: 'Email ƒë√£ ƒë∆∞·ª£c g·ª≠i th√†nh c√¥ng!' 
            });

        } catch (error) {
            console.error('L·ªói khi g·ª≠i email:', error);
            res.status(500).json({ 
                success: false, 
                message: 'C√≥ l·ªói x·∫£y ra khi g·ª≠i email', 
                error: error.message 
            });
        }
    }
}

module.exports = emailController; 